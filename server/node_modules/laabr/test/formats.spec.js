const test = require('ava')
const laabr = require('../src')
const formats = require('../src/formats')

test('throw error if format arguments are invalid – key', (t) => {
  t.throws(() => laabr.format(null, ':foobar'), Error)
  t.throws(() => laabr.format(false, ':foobar'), Error)
  t.throws(() => laabr.format(NaN, ':foobar'), Error)
  t.throws(() => laabr.format(42, ':foobar'), Error)
  t.throws(() => laabr.format('', ':foobar'), Error)
  t.throws(() => laabr.format('foobar', ':foobar'), Error)
  t.throws(() => laabr.format({}, ':foobar'), Error)
  t.throws(() => laabr.format([], ':foobar'), Error)
  t.throws(() => laabr.format(new RegExp(), ':foobar'), Error)
})

test('throw error if format arguments are invalid – format', (t) => {
  t.throws(() => laabr.format('log', null), Error)
  t.throws(() => laabr.format('log', true), Error)
  t.throws(() => laabr.format('log', NaN), Error)
  t.throws(() => laabr.format('log', 42), Error)
  t.throws(() => laabr.format('log', ''), Error)
  t.throws(() => laabr.format('log', {}), Error)
  t.throws(() => laabr.format('log', []), Error)
  t.throws(() => laabr.format('log', new RegExp()), Error)
})

test('throw error if format preset already exists', (t) => {
  t.throws(() => laabr.preset('log.tiny', false), Error)
})

test('throw no error if format arguments are valid', (t) => {
  t.notThrows(() => laabr.format('log', ':foobar'), Error)
  t.notThrows(() => laabr.format('response', ':foobar'), Error)
  t.notThrows(() => laabr.format('request-error', ':foobar'), Error)
  t.notThrows(() => laabr.format('onPostStart', ':foobar'), Error)
  t.notThrows(() => laabr.format('onPostStop', ':foobar'), Error)
  t.notThrows(() => laabr.format('uncaught', ':foobar'), Error)
  t.is(formats.get('foobar'), ':foobar')
  t.is(formats.get({ msg: 'request completed' }), ':foobar')
  t.is(formats.get({ msg: 'request error' }), ':foobar')
  t.is(formats.get({ msg: 'server started' }), ':foobar')
  t.is(formats.get({ msg: 'server stopped' }), ':foobar')
  t.is(formats.get({ tags: ['uncaught'] }), ':foobar')
  t.notThrows(() => laabr.format('log', false), Error)
  t.notThrows(() => laabr.format('response', false), Error)
  t.notThrows(() => laabr.format('request-error', false), Error)
  t.notThrows(() => laabr.format('onPostStart', false), Error)
  t.notThrows(() => laabr.format('onPostStop', false), Error)
  t.is(formats.get('foobar'), false)
  t.is(formats.get({ msg: 'request completed' }), false)
  t.is(formats.get({ msg: 'request error' }), false)
  t.is(formats.get({ msg: 'server started' }), false)
  t.is(formats.get({ msg: 'server stopped' }), false)
})

test('throw no error if format preset does not already exist', (t) => {
  t.notThrows(() => laabr.preset('log.dev', false), Error)
})
